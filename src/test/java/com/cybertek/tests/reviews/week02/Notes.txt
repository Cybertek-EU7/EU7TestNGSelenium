Purpose of our dependencies:
        In order to automate Browsers:
        * Selenium-Java Dependency: Version--3.141.59

        * Selenium needs to talk to browsers, there is  a middle man
        WebDriverManager(Driver--binary files (0000110010))
        Without WebDriverManager we need to install each browser (firefox, chrome...)
        manually. If you put the dependency then all these setup is done by the code.

        Let's get the latest one: mvnrepository website
        https://mvnrepository.com/
        search for webdrivermanager

What do we test as a tester? Main Job?
        We need to compare Expected VS Actual
   * Actual comes from : From Application (WebPage)
   * Expected comes from : SRS (system requirements specification), Documentation


In order to get the actual data from webpage wih automation, Selenium
comes with ready methods:

1. Finding WebElement is the most important part of it.

2. Locate them (findElement() Method)

3. Apply an action (click, sendKeys....)

Locators:
    6 Locators (non-custom) - id, name, tagName, ClassName, LinlTExt, PartialLinkText
       # id locator: it is always unique, but problem can be dynamic

       # name locator: check if it is duplicate

       # tagName: has to be only one of them or first
                this locator is good to use with findElements() method (List webelements)

       # className: has to be only one of them or first, if it has space
                this locator is good to use with findElements() method (List webelements)

       # LinkText/Partial LinkText
            works with anchor tag ---->  <a> tag : text of the webelement

    2 Locators (custom) : Xpath --- CSS locators
        # XPATH: Most useful 3 formulas that you can memorize
        1 )  //tagName[@attribute='value']
            //h1[@class='srp-controls__count-heading']
        2 ) //tagName[.='text']
            //a[.='Laptops']
        3 ) //tagName[contains(@attribute,'value')]  : to find dynamic elements
            //input[contains(@class,'btn-prim')]
/html/body/header/table/tbody/tr/td[3]/form/table/tbody/tr/td[3]/input
How many different categories of Xpath
2: Absolute xpath, Relative xpath
Absolute xpath: with '/' it looks child of each parent (parent to child hierarchy)
Not Recommended
Relative xpath:  '//'   look for any tag in anywhere in the page

How to go from parent to child with xpath
//tagName(xpath formula)/childTag   single slash

from child to parent
//childElementXpathFormula/..    single slash and double dots (we will use this a lot with dynamic webtable)


P.I.Q.: What is the exception that you get the most?
I am getting NoSuchElementException the most
1. Wrong locator (my mistake)
2. Your locator is correct but Developer might have changed something
3. Environmental problem---> syncronization  wait management (static wait--Thread.sleep(2000);)
            Your JAVA code is very fast comparing to WebSite loading
            We will learn dynamic waits.







